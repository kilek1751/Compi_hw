Terminals which are not used

   LEXERROR
   PARANS


Grammar

    0 $accept: Program $end

    1 Program: Enums Funcs

    2 Funcs: /* empty */
    3      | FuncDecl Funcs

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    5 Enums: /* empty */
    6      | EnumDecl Enums

    7 EnumDecl: ENUM ID LBRACE EnumeratorList RBRACE SC

    8 RetType: Type
    9        | VOID

   10 Formals: /* empty */
   11        | FormalsList

   12 FormalsList: FormalDecl
   13            | FormalDecl COMMA FormalsList

   14 FormalDecl: Type ID
   15           | EnumType ID

   16 EnumeratorList: Enumerator
   17               | EnumeratorList COMMA Enumerator

   18 Enumerator: ID

   19 Statements: Statement
   20           | Statements Statement

   21 Statement: LBRACE Statements RBRACE
   22          | Type ID SC
   23          | EnumType ID SC
   24          | EnumDecl
   25          | Type ID ASSIGN Exp SC
   26          | EnumType ID ASSIGN Exp SC
   27          | ID ASSIGN Exp SC
   28          | Call SC
   29          | RETURN SC
   30          | RETURN Exp SC
   31          | IF LPAREN Exp RPAREN Statement
   32          | IF LPAREN Exp RPAREN Statement ELSE Statement
   33          | WHILE LPAREN Exp RPAREN Statement
   34          | BREAK SC
   35          | CONTINUE SC

   36 Call: ID LPAREN ExpList RPAREN
   37     | ID LPAREN RPAREN

   38 ExpList: Exp
   39        | Exp COMMA ExpList

   40 Type: INT
   41     | BYTE
   42     | BOOL

   43 EnumType: ENUM ID

   44 Exp: LPAREN Exp RPAREN
   45    | Exp BINOPH Exp
   46    | Exp BINOPL Exp
   47    | ID
   48    | Call
   49    | NUM
   50    | NUM B
   51    | STRING
   52    | TRUE
   53    | FALSE
   54    | NOT Exp
   55    | Exp AND Exp
   56    | Exp OR Exp
   57    | Exp RELOP Exp
   58    | Exp RELEQ Exp
   59    | LPAREN Type RPAREN Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
LEXERROR (258)
BOOL (259) 42
VOID (260) 9
INT (261) 40
BYTE (262) 41
B (263) 50
ENUM (264) 7 43
TRUE (265) 52
FALSE (266) 53
RETURN (267) 29 30
WHILE (268) 33
IF (269) 31 32
BREAK (270) 34
CONTINUE (271) 35
SC (272) 7 22 23 25 26 27 28 29 30 34 35
COMMA (273) 13 17 39
LPAREN (274) 4 31 32 33 36 37 44 59
RPAREN (275) 4 31 32 33 36 37 44 59
LBRACE (276) 4 7 21
RBRACE (277) 4 7 21
ID (278) 4 7 14 15 18 22 23 25 26 27 36 37 43 47
NUM (279) 49 50
STRING (280) 51
ASSIGN (281) 25 26 27
OR (282) 56
AND (283) 55
RELEQ (284) 58
RELOP (285) 57
BINOPL (286) 46
BINOPH (287) 45
CAST (288)
NOT (289) 54
PARANS (290)
THEN (291)
ELSE (292) 32


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
Program (39)
    on left: 1, on right: 0
Funcs (40)
    on left: 2 3, on right: 1 3
FuncDecl (41)
    on left: 4, on right: 3
Enums (42)
    on left: 5 6, on right: 1 6
EnumDecl (43)
    on left: 7, on right: 6 24
RetType (44)
    on left: 8 9, on right: 4
Formals (45)
    on left: 10 11, on right: 4
FormalsList (46)
    on left: 12 13, on right: 11 13
FormalDecl (47)
    on left: 14 15, on right: 12 13
EnumeratorList (48)
    on left: 16 17, on right: 7 17
Enumerator (49)
    on left: 18, on right: 16 17
Statements (50)
    on left: 19 20, on right: 4 20 21
Statement (51)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35,
    on right: 19 20 31 32 33
Call (52)
    on left: 36 37, on right: 28 48
ExpList (53)
    on left: 38 39, on right: 36 39
Type (54)
    on left: 40 41 42, on right: 8 14 22 25 59
EnumType (55)
    on left: 43, on right: 15 23 26
Exp (56)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59,
    on right: 25 26 27 30 31 32 33 38 39 44 45 46 54 55 56 57 58 59


state 0

    0 $accept: . Program $end

    ENUM  shift, and go to state 1

    $default  reduce using rule 5 (Enums)

    Program   go to state 2
    Enums     go to state 3
    EnumDecl  go to state 4


state 1

    7 EnumDecl: ENUM . ID LBRACE EnumeratorList RBRACE SC

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: Enums . Funcs

    BOOL  shift, and go to state 7
    VOID  shift, and go to state 8
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    $default  reduce using rule 2 (Funcs)

    Funcs     go to state 11
    FuncDecl  go to state 12
    RetType   go to state 13
    Type      go to state 14


state 4

    6 Enums: EnumDecl . Enums

    ENUM  shift, and go to state 1

    $default  reduce using rule 5 (Enums)

    Enums     go to state 15
    EnumDecl  go to state 4


state 5

    7 EnumDecl: ENUM ID . LBRACE EnumeratorList RBRACE SC

    LBRACE  shift, and go to state 16


state 6

    0 $accept: Program $end .

    $default  accept


state 7

   42 Type: BOOL .

    $default  reduce using rule 42 (Type)


state 8

    9 RetType: VOID .

    $default  reduce using rule 9 (RetType)


state 9

   40 Type: INT .

    $default  reduce using rule 40 (Type)


state 10

   41 Type: BYTE .

    $default  reduce using rule 41 (Type)


state 11

    1 Program: Enums Funcs .

    $default  reduce using rule 1 (Program)


state 12

    3 Funcs: FuncDecl . Funcs

    BOOL  shift, and go to state 7
    VOID  shift, and go to state 8
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10

    $default  reduce using rule 2 (Funcs)

    Funcs     go to state 17
    FuncDecl  go to state 12
    RetType   go to state 13
    Type      go to state 14


state 13

    4 FuncDecl: RetType . ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    ID  shift, and go to state 18


state 14

    8 RetType: Type .

    $default  reduce using rule 8 (RetType)


state 15

    6 Enums: EnumDecl Enums .

    $default  reduce using rule 6 (Enums)


state 16

    7 EnumDecl: ENUM ID LBRACE . EnumeratorList RBRACE SC

    ID  shift, and go to state 19

    EnumeratorList  go to state 20
    Enumerator      go to state 21


state 17

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


state 18

    4 FuncDecl: RetType ID . LPAREN Formals RPAREN LBRACE Statements RBRACE

    LPAREN  shift, and go to state 22


state 19

   18 Enumerator: ID .

    $default  reduce using rule 18 (Enumerator)


state 20

    7 EnumDecl: ENUM ID LBRACE EnumeratorList . RBRACE SC
   17 EnumeratorList: EnumeratorList . COMMA Enumerator

    COMMA   shift, and go to state 23
    RBRACE  shift, and go to state 24


state 21

   16 EnumeratorList: Enumerator .

    $default  reduce using rule 16 (EnumeratorList)


state 22

    4 FuncDecl: RetType ID LPAREN . Formals RPAREN LBRACE Statements RBRACE

    BOOL  shift, and go to state 7
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    ENUM  shift, and go to state 25

    $default  reduce using rule 10 (Formals)

    Formals      go to state 26
    FormalsList  go to state 27
    FormalDecl   go to state 28
    Type         go to state 29
    EnumType     go to state 30


state 23

   17 EnumeratorList: EnumeratorList COMMA . Enumerator

    ID  shift, and go to state 19

    Enumerator  go to state 31


state 24

    7 EnumDecl: ENUM ID LBRACE EnumeratorList RBRACE . SC

    SC  shift, and go to state 32


state 25

   43 EnumType: ENUM . ID

    ID  shift, and go to state 33


state 26

    4 FuncDecl: RetType ID LPAREN Formals . RPAREN LBRACE Statements RBRACE

    RPAREN  shift, and go to state 34


state 27

   11 Formals: FormalsList .

    $default  reduce using rule 11 (Formals)


state 28

   12 FormalsList: FormalDecl .
   13            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 35

    $default  reduce using rule 12 (FormalsList)


state 29

   14 FormalDecl: Type . ID

    ID  shift, and go to state 36


state 30

   15 FormalDecl: EnumType . ID

    ID  shift, and go to state 37


state 31

   17 EnumeratorList: EnumeratorList COMMA Enumerator .

    $default  reduce using rule 17 (EnumeratorList)


state 32

    7 EnumDecl: ENUM ID LBRACE EnumeratorList RBRACE SC .

    $default  reduce using rule 7 (EnumDecl)


state 33

   43 EnumType: ENUM ID .

    $default  reduce using rule 43 (EnumType)


state 34

    4 FuncDecl: RetType ID LPAREN Formals RPAREN . LBRACE Statements RBRACE

    LBRACE  shift, and go to state 38


state 35

   13 FormalsList: FormalDecl COMMA . FormalsList

    BOOL  shift, and go to state 7
    INT   shift, and go to state 9
    BYTE  shift, and go to state 10
    ENUM  shift, and go to state 25

    FormalsList  go to state 39
    FormalDecl   go to state 28
    Type         go to state 29
    EnumType     go to state 30


state 36

   14 FormalDecl: Type ID .

    $default  reduce using rule 14 (FormalDecl)


state 37

   15 FormalDecl: EnumType ID .

    $default  reduce using rule 15 (FormalDecl)


state 38

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE . Statements RBRACE

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    ID        shift, and go to state 47

    EnumDecl    go to state 48
    Statements  go to state 49
    Statement   go to state 50
    Call        go to state 51
    Type        go to state 52
    EnumType    go to state 53


state 39

   13 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 13 (FormalsList)


state 40

    7 EnumDecl: ENUM . ID LBRACE EnumeratorList RBRACE SC
   43 EnumType: ENUM . ID

    ID  shift, and go to state 54


state 41

   29 Statement: RETURN . SC
   30          | RETURN . Exp SC

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    SC      shift, and go to state 57
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 64


state 42

   33 Statement: WHILE . LPAREN Exp RPAREN Statement

    LPAREN  shift, and go to state 65


state 43

   31 Statement: IF . LPAREN Exp RPAREN Statement
   32          | IF . LPAREN Exp RPAREN Statement ELSE Statement

    LPAREN  shift, and go to state 66


state 44

   34 Statement: BREAK . SC

    SC  shift, and go to state 67


state 45

   35 Statement: CONTINUE . SC

    SC  shift, and go to state 68


state 46

   21 Statement: LBRACE . Statements RBRACE

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    ID        shift, and go to state 47

    EnumDecl    go to state 48
    Statements  go to state 69
    Statement   go to state 50
    Call        go to state 51
    Type        go to state 52
    EnumType    go to state 53


state 47

   27 Statement: ID . ASSIGN Exp SC
   36 Call: ID . LPAREN ExpList RPAREN
   37     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 70
    ASSIGN  shift, and go to state 71


state 48

   24 Statement: EnumDecl .

    $default  reduce using rule 24 (Statement)


state 49

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements . RBRACE
   20 Statements: Statements . Statement

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    RBRACE    shift, and go to state 72
    ID        shift, and go to state 47

    EnumDecl   go to state 48
    Statement  go to state 73
    Call       go to state 51
    Type       go to state 52
    EnumType   go to state 53


state 50

   19 Statements: Statement .

    $default  reduce using rule 19 (Statements)


state 51

   28 Statement: Call . SC

    SC  shift, and go to state 74


state 52

   22 Statement: Type . ID SC
   25          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 75


state 53

   23 Statement: EnumType . ID SC
   26          | EnumType . ID ASSIGN Exp SC

    ID  shift, and go to state 76


state 54

    7 EnumDecl: ENUM ID . LBRACE EnumeratorList RBRACE SC
   43 EnumType: ENUM ID .

    LBRACE  shift, and go to state 16

    $default  reduce using rule 43 (EnumType)


state 55

   52 Exp: TRUE .

    $default  reduce using rule 52 (Exp)


state 56

   53 Exp: FALSE .

    $default  reduce using rule 53 (Exp)


state 57

   29 Statement: RETURN SC .

    $default  reduce using rule 29 (Statement)


state 58

   44 Exp: LPAREN . Exp RPAREN
   59    | LPAREN . Type RPAREN Exp

    BOOL    shift, and go to state 7
    INT     shift, and go to state 9
    BYTE    shift, and go to state 10
    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Type  go to state 77
    Exp   go to state 78


state 59

   36 Call: ID . LPAREN ExpList RPAREN
   37     | ID . LPAREN RPAREN
   47 Exp: ID .

    LPAREN  shift, and go to state 70

    $default  reduce using rule 47 (Exp)


state 60

   49 Exp: NUM .
   50    | NUM . B

    B  shift, and go to state 79

    $default  reduce using rule 49 (Exp)


state 61

   51 Exp: STRING .

    $default  reduce using rule 51 (Exp)


state 62

   54 Exp: NOT . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 80


state 63

   48 Exp: Call .

    $default  reduce using rule 48 (Exp)


state 64

   30 Statement: RETURN Exp . SC
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    SC      shift, and go to state 81
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 65

   33 Statement: WHILE LPAREN . Exp RPAREN Statement

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 88


state 66

   31 Statement: IF LPAREN . Exp RPAREN Statement
   32          | IF LPAREN . Exp RPAREN Statement ELSE Statement

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 89


state 67

   34 Statement: BREAK SC .

    $default  reduce using rule 34 (Statement)


state 68

   35 Statement: CONTINUE SC .

    $default  reduce using rule 35 (Statement)


state 69

   20 Statements: Statements . Statement
   21 Statement: LBRACE Statements . RBRACE

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    RBRACE    shift, and go to state 90
    ID        shift, and go to state 47

    EnumDecl   go to state 48
    Statement  go to state 73
    Call       go to state 51
    Type       go to state 52
    EnumType   go to state 53


state 70

   36 Call: ID LPAREN . ExpList RPAREN
   37     | ID LPAREN . RPAREN

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    RPAREN  shift, and go to state 91
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call     go to state 63
    ExpList  go to state 92
    Exp      go to state 93


state 71

   27 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 94


state 72

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE .

    $default  reduce using rule 4 (FuncDecl)


state 73

   20 Statements: Statements Statement .

    $default  reduce using rule 20 (Statements)


state 74

   28 Statement: Call SC .

    $default  reduce using rule 28 (Statement)


state 75

   22 Statement: Type ID . SC
   25          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 95
    ASSIGN  shift, and go to state 96


state 76

   23 Statement: EnumType ID . SC
   26          | EnumType ID . ASSIGN Exp SC

    SC      shift, and go to state 97
    ASSIGN  shift, and go to state 98


state 77

   59 Exp: LPAREN Type . RPAREN Exp

    RPAREN  shift, and go to state 99


state 78

   44 Exp: LPAREN Exp . RPAREN
   45    | Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    RPAREN  shift, and go to state 100
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 79

   50 Exp: NUM B .

    $default  reduce using rule 50 (Exp)


state 80

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   54    | NOT Exp .
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    $default  reduce using rule 54 (Exp)


state 81

   30 Statement: RETURN Exp SC .

    $default  reduce using rule 30 (Statement)


state 82

   56 Exp: Exp OR . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 101


state 83

   55 Exp: Exp AND . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 102


state 84

   58 Exp: Exp RELEQ . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 103


state 85

   57 Exp: Exp RELOP . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 104


state 86

   46 Exp: Exp BINOPL . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 105


state 87

   45 Exp: Exp BINOPH . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 106


state 88

   33 Statement: WHILE LPAREN Exp . RPAREN Statement
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    RPAREN  shift, and go to state 107
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 89

   31 Statement: IF LPAREN Exp . RPAREN Statement
   32          | IF LPAREN Exp . RPAREN Statement ELSE Statement
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    RPAREN  shift, and go to state 108
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 90

   21 Statement: LBRACE Statements RBRACE .

    $default  reduce using rule 21 (Statement)


state 91

   37 Call: ID LPAREN RPAREN .

    $default  reduce using rule 37 (Call)


state 92

   36 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 109


state 93

   38 ExpList: Exp .
   39        | Exp . COMMA ExpList
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    COMMA   shift, and go to state 110
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87

    $default  reduce using rule 38 (ExpList)


state 94

   27 Statement: ID ASSIGN Exp . SC
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    SC      shift, and go to state 111
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 95

   22 Statement: Type ID SC .

    $default  reduce using rule 22 (Statement)


state 96

   25 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 112


state 97

   23 Statement: EnumType ID SC .

    $default  reduce using rule 23 (Statement)


state 98

   26 Statement: EnumType ID ASSIGN . Exp SC

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 113


state 99

   59 Exp: LPAREN Type RPAREN . Exp

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call  go to state 63
    Exp   go to state 114


state 100

   44 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 44 (Exp)


state 101

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   56    | Exp OR Exp .
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87

    $default  reduce using rule 56 (Exp)


state 102

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   55    | Exp AND Exp .
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87

    $default  reduce using rule 55 (Exp)


state 103

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp
   58    | Exp RELEQ Exp .

    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87

    $default  reduce using rule 58 (Exp)


state 104

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   57    | Exp RELOP Exp .
   58    | Exp . RELEQ Exp

    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87

    RELOP  error (nonassociative)

    $default  reduce using rule 57 (Exp)


state 105

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   46    | Exp BINOPL Exp .
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    BINOPH  shift, and go to state 87

    $default  reduce using rule 46 (Exp)


state 106

   45 Exp: Exp . BINOPH Exp
   45    | Exp BINOPH Exp .
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    $default  reduce using rule 45 (Exp)


state 107

   33 Statement: WHILE LPAREN Exp RPAREN . Statement

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    ID        shift, and go to state 47

    EnumDecl   go to state 48
    Statement  go to state 115
    Call       go to state 51
    Type       go to state 52
    EnumType   go to state 53


state 108

   31 Statement: IF LPAREN Exp RPAREN . Statement
   32          | IF LPAREN Exp RPAREN . Statement ELSE Statement

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    ID        shift, and go to state 47

    EnumDecl   go to state 48
    Statement  go to state 116
    Call       go to state 51
    Type       go to state 52
    EnumType   go to state 53


state 109

   36 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 36 (Call)


state 110

   39 ExpList: Exp COMMA . ExpList

    TRUE    shift, and go to state 55
    FALSE   shift, and go to state 56
    LPAREN  shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60
    STRING  shift, and go to state 61
    NOT     shift, and go to state 62

    Call     go to state 63
    ExpList  go to state 117
    Exp      go to state 93


state 111

   27 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 27 (Statement)


state 112

   25 Statement: Type ID ASSIGN Exp . SC
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    SC      shift, and go to state 118
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 113

   26 Statement: EnumType ID ASSIGN Exp . SC
   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp

    SC      shift, and go to state 119
    OR      shift, and go to state 82
    AND     shift, and go to state 83
    RELEQ   shift, and go to state 84
    RELOP   shift, and go to state 85
    BINOPL  shift, and go to state 86
    BINOPH  shift, and go to state 87


state 114

   45 Exp: Exp . BINOPH Exp
   46    | Exp . BINOPL Exp
   55    | Exp . AND Exp
   56    | Exp . OR Exp
   57    | Exp . RELOP Exp
   58    | Exp . RELEQ Exp
   59    | LPAREN Type RPAREN Exp .

    $default  reduce using rule 59 (Exp)


state 115

   33 Statement: WHILE LPAREN Exp RPAREN Statement .

    $default  reduce using rule 33 (Statement)


state 116

   31 Statement: IF LPAREN Exp RPAREN Statement .
   32          | IF LPAREN Exp RPAREN Statement . ELSE Statement

    ELSE  shift, and go to state 120

    $default  reduce using rule 31 (Statement)


state 117

   39 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 39 (ExpList)


state 118

   25 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 25 (Statement)


state 119

   26 Statement: EnumType ID ASSIGN Exp SC .

    $default  reduce using rule 26 (Statement)


state 120

   32 Statement: IF LPAREN Exp RPAREN Statement ELSE . Statement

    BOOL      shift, and go to state 7
    INT       shift, and go to state 9
    BYTE      shift, and go to state 10
    ENUM      shift, and go to state 40
    RETURN    shift, and go to state 41
    WHILE     shift, and go to state 42
    IF        shift, and go to state 43
    BREAK     shift, and go to state 44
    CONTINUE  shift, and go to state 45
    LBRACE    shift, and go to state 46
    ID        shift, and go to state 47

    EnumDecl   go to state 48
    Statement  go to state 121
    Call       go to state 51
    Type       go to state 52
    EnumType   go to state 53


state 121

   32 Statement: IF LPAREN Exp RPAREN Statement ELSE Statement .

    $default  reduce using rule 32 (Statement)
